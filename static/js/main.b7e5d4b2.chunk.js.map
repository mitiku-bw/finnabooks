{"version":3,"sources":["finnabooks.png","context.js","components/layout/Navbar.js","components/layout/Spinner.js","components/books/Book.js","components/books/Books.js","components/layout/Index.js","components/books/Details.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Context","React","createContext","reducer","state","action","type","Object","objectSpread","book_list","payload","heading","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","dispatch","setState","inherits","createClass","key","value","_this2","axios","get","then","res","data","records","console","log","catch","err","react_default","a","createElement","props","children","Component","Consumer","Navbar","quickSearch","findBook","e","preventDefault","defineProperty","target","name","className","href","basename","process","src","logo","alt","onSubmit","bind","id","placeholder","aria-label","onChange","Spinner","role","Book","book","react_router_dom","to","images","title","year","Books","Fragment","map","item","books_Book","Index","books_Books","Details","book_details","match","params","rating_classes","undefined","i","rating","average","primaryAuthors","publishers","isbns","aria-hidden","App","context_Provider","layout_Navbar","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+RCGlCC,EAAUC,IAAMC,gBAChBC,EAAU,SAACC,EAAOC,GACpB,OAAOA,EAAOC,MACV,IAAK,eACL,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,UAAWJ,EAAOK,QAClBC,QAAS,mBAEb,QACA,OAAOP,IAIFQ,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAR,OAAAS,EAAA,EAAAT,CAAAU,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAR,OAAAiB,EAAA,EAAAjB,CAAAU,MAAAH,EAAAP,OAAAkB,EAAA,EAAAlB,CAAAK,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAW,OAAAP,MACIjB,MAAQ,CACJK,UAAW,GACXE,QAAS,8BACTkB,SAAU,SAAAxB,GAAM,OAAIU,EAAKe,SAAS,SAAA1B,GAAK,OAAID,EAAQC,EAAOC,OAJlEU,EAAA,OAAAR,OAAAwB,EAAA,EAAAxB,CAAAK,EAAAC,GAAAN,OAAAyB,EAAA,EAAAzB,CAAAK,EAAA,EAAAqB,IAAA,oBAAAC,MAAA,WAOuB,IAAAC,EAAAlB,KAGfmB,IAAMC,IAAN,sQACCC,KAAK,SAAAC,GACFJ,EAAKL,SAAS,CAAErB,UAAU8B,EAAIC,KAAKC,UACnCC,QAAQC,IAAIJ,EAAIC,KAAKC,WAExBG,MAAM,SAAAL,GAAG,OAAIG,QAAQC,IAAIJ,EAAIM,SAftC,CAAAZ,IAAA,SAAAC,MAAA,WAmBQ,OACIY,EAAAC,EAAAC,cAAChD,EAAQY,SAAT,CAAkBsB,MAAOjB,KAAKb,OACzBa,KAAKgC,MAAMC,cArB5BtC,EAAA,CAA8BuC,aA2BjBC,EAAWpD,EAAQoD,0BCyBjBC,6MA/DbjD,MAAQ,CACNkD,YAAa,MAGfC,SAAW,SAAC1B,EAAU2B,GACpBA,EAAEC,iBACFrB,IAAMC,IAAN,0CAAAT,OAAoDb,EAAKX,MAAMkD,cAC1DhB,KAAK,SAAAC,GACFV,EAAS,CACPvB,KAAM,eACNI,QAAS6B,EAAIC,KAAKC,UAEpB1B,EAAKe,SAAS,CAACwB,YAAa,OAE/BV,MAAM,SAAAL,GAAG,OAAIG,QAAQC,IAAIJ,EAAIM,gFAG3BW,GACPvC,KAAKa,SAALvB,OAAAmD,EAAA,EAAAnD,CAAA,GAAiBiD,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOzB,yCAEnC,IAAAC,EAAAlB,KACP,OACE6B,EAAAC,EAAAC,cAAA,OAAKa,UAAU,aACbf,EAAAC,EAAAC,cAAA,OAAKa,UAAU,oCACbf,EAAAC,EAAAC,cAAA,KACEa,UAAU,eACVC,KAAK,IACLC,SAAUC,eAEVlB,EAAAC,EAAAC,cAAA,OAAKiB,IAAKC,IAAMC,IAAI,SACpBrB,EAAAC,EAAAC,cAAA,QAAMa,UAAU,UAAhB,SANF,SAQAf,EAAAC,EAAAC,cAACI,EAAD,KACG,SAAAlB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEiB,EAAAC,EAAAC,cAAA,QAAMa,UAAU,cAAcO,SAAUjC,EAAKoB,SAASc,KAAKlC,EAAMN,IAC/DiB,EAAAC,EAAAC,cAAA,SACEa,UAAU,wBACVvD,KAAK,OACLgE,GAAG,eACHC,YAAY,sDACZX,KAAK,cACLY,aAAW,SACXtC,MAAOC,EAAK/B,MAAMkD,YAClBmB,SAAUtC,EAAKsC,SAASJ,KAAKlC,KAE/BW,EAAAC,EAAAC,cAAA,UAAQa,UAAU,kBAAkBvD,KAAK,UACvCwC,EAAAC,EAAAC,cAAA,KAAGa,UAAU,mBAEff,EAAAC,EAAAC,cAAA,UAAQa,UAAU,kBAAkBvD,KAAK,UAAzC,+BAnDG6C,aCHN,SAASuB,IACpB,OACI5B,EAAAC,EAAAC,cAAA,OAAKa,UAAU,iCACXf,EAAAC,EAAAC,cAAA,OAAKa,UAAU,4BAA4Bc,KAAK,UAC5C7B,EAAAC,EAAAC,cAAA,QAAMa,UAAU,WAAhB,gBCHhB,IAkBee,EAlBF,SAAC3B,GAAU,IACZ4B,EAAS5B,EAAT4B,KAER,OACI/B,EAAAC,EAAAC,cAAA,OAAKa,UAAU,sBACXf,EAAAC,EAAAC,cAAA,OAAKa,UAAU,uBACXf,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAMC,GAAE,gBAAAnD,OAAkBiD,EAAKP,IAAMT,UAAU,aAC3Cf,EAAAC,EAAAC,cAAA,OAAKiB,IALA,uBAKkBY,EAAKG,OAAQnB,UAAU,eAAeM,IAAKU,EAAKI,SAF/E,IAGgBnC,EAAAC,EAAAC,cAAA,OAAKa,UAAU,aACnBf,EAAAC,EAAAC,cAAA,MAAIa,UAAU,cAAcgB,EAAKI,OACjCnC,EAAAC,EAAAC,cAAA,KAAGa,UAAU,aAAagB,EAAKK,UCmBxCC,mLAzBP,OACArC,EAAAC,EAAAC,cAACI,EAAD,KACK,SAAAlB,GAAQ,IACGzB,EAAuByB,EAAvBzB,UAAWE,EAAYuB,EAAZvB,QACnB,MAAiB,cAAdF,GAAkD,IAArBA,EAAUW,OAC/B0B,EAAAC,EAAAC,cAAC0B,EAAD,MAGH5B,EAAAC,EAAAC,cAACF,EAAAC,EAAMqC,SAAP,KACItC,EAAAC,EAAAC,cAAA,MAAIa,UAAU,oBAAoBlD,GAClCmC,EAAAC,EAAAC,cAAA,OAAKa,UAAU,OACVpD,EAAU4E,IAAI,SAAAC,GAAI,OACfxC,EAAAC,EAAAC,cAACuC,EAAD,CAAMtD,IAAKqD,EAAKhB,GAAIO,KAAMS,iBAd1CnC,aCMLqC,EARD,WACV,OACI1C,EAAAC,EAAAC,cAACF,EAAAC,EAAMqC,SAAP,KACItC,EAAAC,EAAAC,cAACyC,EAAD,QC6DGC,6MA7DXtF,MAAQ,CACJuF,aAAc,GACdhF,QAAS,mGAEM,IAAAwB,EAAAlB,KACfmB,IAAMC,IAAN,yCAAAT,OAAmDX,KAAKgC,MAAM2C,MAAMC,OAAOvB,GAA3E,+IACChC,KAAK,SAAAC,GACFJ,EAAKL,SAAS,CAAE6D,aAAapD,EAAIC,KAAKC,QAAQ,KAC9CC,QAAQC,IAAIJ,EAAIC,KAAKC,QAAQ,MAEhCG,MAAM,SAAAL,GAAG,OAAIG,QAAQC,IAAIJ,EAAIM,wCAI9B,IAAMgC,EAAO5D,KAAKb,MAAMuF,aACpBG,EAAiB,CAAC,MAAO,MAAO,MAAM,MAAM,OAIhD,QAAYC,IAATlB,GAAsC,IAAhBA,EAAKzD,QAAwB,MAARyD,EAC1C,OAAO/B,EAAAC,EAAAC,cAAC0B,EAAD,MAEPhC,QAAQC,IAAI,gBAAiBkC,GAC7B,IAAI,IAAImB,EAAE,EAAGA,EAAInB,EAAKoB,OAAOC,QAASF,IAClCF,EAAeE,GAAK,MAExB,OACIlD,EAAAC,EAAAC,cAACF,EAAAC,EAAMqC,SAAP,KACItC,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAMC,GAAG,IAAIlB,UAAU,8BAAvB,WAGAf,EAAAC,EAAAC,cAAA,OAAKa,UAAU,aACXf,EAAAC,EAAAC,cAAA,OAAKa,UAAU,kBACXf,EAAAC,EAAAC,cAAA,OAAKa,UAAU,YACXf,EAAAC,EAAAC,cAAA,OAAKiB,IAjBR,uBAiB0BY,EAAKG,OAAQnB,UAAU,WAAWM,IAAI,gBAErErB,EAAAC,EAAAC,cAAA,OAAKa,UAAU,YACXf,EAAAC,EAAAC,cAAA,OAAKa,UAAU,aACXf,EAAAC,EAAAC,cAAA,MAAIa,UAAU,cAAcgB,EAAKI,OACjCnC,EAAAC,EAAAC,cAAA,KAAGa,UAAU,aAAYf,EAAAC,EAAAC,cAAA,2BAA2B6B,EAAKsB,gBACzDrD,EAAAC,EAAAC,cAAA,KAAGa,UAAU,aAAYf,EAAAC,EAAAC,cAAA,8BAA8B6B,EAAKuB,YAC5DtD,EAAAC,EAAAC,cAAA,KAAGa,UAAU,aAAYf,EAAAC,EAAAC,cAAA,wBAAwB6B,EAAKK,MACtDpC,EAAAC,EAAAC,cAAA,KAAGa,UAAU,aAAYf,EAAAC,EAAAC,cAAA,wBAAwB6B,EAAKwB,OACtDvD,EAAAC,EAAAC,cAAA,KAAGa,UAAU,aACTf,EAAAC,EAAAC,cAAA,uBAAe6B,EAAKoB,OAAOC,QAA3B,KACApD,EAAAC,EAAAC,cAAA,KAAGa,UAAWiC,EAAe,GA7BtC,WA6BqDQ,cAAY,SACxDxD,EAAAC,EAAAC,cAAA,KAAGa,UAAWiC,EAAe,GA9BtC,WA8BqDQ,cAAY,SACxDxD,EAAAC,EAAAC,cAAA,KAAGa,UAAWiC,EAAe,GA/BtC,WA+BqDQ,cAAY,SACxDxD,EAAAC,EAAAC,cAAA,KAAGa,UAAWiC,EAAe,GAhCtC,WAgCqDQ,cAAY,SACxDxD,EAAAC,EAAAC,cAAA,KAAGa,UAAWiC,EAAe,GAjCtC,WAiCqDQ,cAAY,sBAlDtEnD,mBCsBPoD,MAnBf,WACE,OACEzD,EAAAC,EAAAC,cAACwD,EAAD,KACE1D,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAQf,SAAUC,eAChBlB,EAAAC,EAAAC,cAACF,EAAAC,EAAMqC,SAAP,KACEtC,EAAAC,EAAAC,cAACyD,EAAD,MACA3D,EAAAC,EAAAC,cAAA,OAAKa,UAAU,aACbf,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,KACE5D,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWrB,IACjC1C,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWnB,UCL3CoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASrB,MACvB,2DCZNsB,IAASC,OAAOrE,EAAAC,EAAAC,cAACoE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnF,KAAK,SAAAoF,GACjCA,EAAaC","file":"static/js/main.b7e5d4b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/finnabooks.861dabee.png\";","import React, { Component } from 'react'\nimport axios from 'axios'\n\nconst Context = React.createContext();\nconst reducer = (state, action) => {\n    switch(action.type){\n        case 'SEARCH_BOOKS':\n        return {\n            ...state,\n            book_list: action.payload,\n            heading: 'Search Results'\n        }\n        default: \n        return state\n    }\n}\n\nexport class Provider extends Component {\n    state = {\n        book_list: [],\n        heading: 'Latest Books from Finna API',\n        dispatch: action => this.setState(state => reducer(state, action))\n    }\n\n    componentDidMount(){\n        //https://api.finna.fi/api/v1/search?type=AllFields&field[]=id&field[]=title&field[]=primaryAuthors&field[]=publishers&field[]=year&field[]=images&field[]=ratings&sort=relevance%2Cid%20asc&page=1&limit=20&prettyPrint=false&lng=fi\n\n        axios.get(`https://api.finna.fi/api/v1/search?type=AllFields&field[]=id&field[]=title&field[]=primaryAuthors&field[]=publishers&field[]=year&field[]=images&field[]=ratings&filter[]=format%3A0%2FBook%2F&sort=relevance%2Cid%20asc&page=1&limit=100&prettyPrint=false&lng=fi`)\n        .then(res => {\n            this.setState({ book_list:res.data.records})\n            console.log(res.data.records)\n        })\n        .catch(res => console.log(res.err))\n    }\n\n    render(){\n        return(\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer","import React, { Component } from \"react\";\nimport axios from 'axios'\nimport { Consumer } from '../../context'\nimport logo from \"../../finnabooks.png\";\n\nclass Navbar extends Component {\n  state = {\n    quickSearch: \"\"\n  };\n\n  findBook = (dispatch, e) => {\n    e.preventDefault()\n    axios.get(`https://api.finna.fi/v1/search?lookfor=${this.state.quickSearch}`)\n        .then(res => {\n            dispatch({\n              type: 'SEARCH_BOOKS',\n              payload: res.data.records\n            })\n            this.setState({quickSearch: ''})\n        })\n        .catch(res => console.log(res.err))\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <nav className=\"row navbar navbar-light bg-light\">\n          <a\n            className=\"navbar-brand\"\n            href=\"/\"\n            basename={process.env.PUBLIC_URL}\n          >\n            <img src={logo} alt=\"logo\" />\n            <span className=\"bluish\">Finna</span>Books\n          </a>\n          <Consumer>\n            {value => {\n              const { dispatch } = value\n              return (\n                <form className=\"form-inline\" onSubmit={this.findBook.bind(this, dispatch)}>\n                  <input\n                    className=\"form-control input-lg\"\n                    type=\"text\"\n                    id=\"quick-search\"\n                    placeholder=\"Search for books by keyword / title / author / ISBN\"\n                    name=\"quickSearch\"\n                    aria-label=\"Search\"\n                    value={this.state.quickSearch}\n                    onChange={this.onChange.bind(this)}\n                  />\n                  <button className=\"btn btn-primary\" type=\"submit\">\n                    <i className=\"fas fa-search\" />\n                  </button>\n                  <button className=\"btn btn-default\" type=\"submit\">\n                    Advanced Search\n                  </button>\n                </form>\n              );\n            }}\n          </Consumer>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from 'react'\n\nexport default function Spinner() {\n    return (\n        <div className=\"d-flex justify-content-center\">\n            <div className=\"spinner-grow text-primary\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nconst Book = (props) => {\n    const { book } = props\n    const preimage_url = 'https://api.finna.fi'\n    return (\n        <div className=\"card-deck col-md-3\">\n            <div className=\"card mb-4 shadow-sm\">\n                <Link to={`details/book/${book.id}`} className=\"card-link\">\n                    <img src={preimage_url+book.images} className=\"card-img-top\" alt={book.title} />\n                    </Link> <div className=\"card-body\">\n                        <h5 className=\"card-title\">{book.title}</h5>  \n                        <p className=\"card-text\">{book.year}</p>                  \n                    </div>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default Book","import React, { Component } from 'react'\nimport { Consumer } from '../../context'\nimport Spinner from '../layout/Spinner'\nimport Book from './Book'\n\nclass Books extends Component {\n    render() {\n        return (\n        <Consumer>\n            {value =>{  \n                const { book_list, heading } = value\n                if(book_list === 'undefined' || book_list.length === 0){\n                    return <Spinner />\n                }else{\n                    return (\n                        <React.Fragment>\n                            <h3 className=\"text-center mb-4\">{heading}</h3>\n                            <div className=\"row\">\n                                {book_list.map(item => (\n                                    <Book key={item.id} book={item}/>\n                                ))}\n                            </div>\n                        </React.Fragment>\n                    )\n                }\n\n            }}\n        </Consumer>\n        )\n    }\n}\n\nexport default Books","import React from 'react'\nimport Books from '../books/Books'\n\nconst Index = () => {\n    return(\n        <React.Fragment>\n            <Books />\n        </React.Fragment>\n    )\n}\n\nexport default Index\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport Spinner from '../layout/Spinner'\nimport axios from 'axios'\n\nclass Details extends Component {\n    state = {\n        book_details: [],\n        heading: \"Book Details\"\n    }\n    componentDidMount(){\n        axios.get(`https://api.finna.fi/api/v1/record?id=${this.props.match.params.id}&field[]=isbns&field[]=title&field[]=primaryAuthors&field[]=publishers&field[]=year&field[]=images&field[]=rating&prettyPrint=false&lng=fi`)\n        .then(res => {\n            this.setState({ book_details:res.data.records[0]})\n            console.log(res.data.records[0])\n        })\n        .catch(res => console.log(res.err))\n    }\n\n    render() {\n        const book = this.state.book_details\n        let rating_classes = [\"far\", \"far\", \"far\",\"far\",\"far\"]\n        const star_class = \" fa-star\"\n        const preimage_url = 'https://api.finna.fi' \n\n        if(book === undefined || book.length === 0 || book == null){\n            return <Spinner />\n        }else{\n            console.log(\"Book Details:\", book)\n            for(let i=0; i < book.rating.average; i++){\n                rating_classes[i] = \"fas\"\n            }\n            return (\n                <React.Fragment>\n                    <Link to=\"/\" className=\"btn btn-primary btn-sm mb4\">\n                        Go back\n                    </Link>\n                    <div className=\"card mb-3\">\n                        <div className=\"row no-gutters\">\n                            <div className=\"col-md-4\">\n                                <img src={preimage_url+book.images} className=\"card-img\" alt=\"Book cover\" />\n                            </div>\n                        <div className=\"col-md-8\">\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">{book.title}</h5>\n                                <p className=\"card-text\"><strong>Authors: </strong>{book.primaryAuthors}</p>\n                                <p className=\"card-text\"><strong>Publishers: </strong>{book.publishers}</p>\n                                <p className=\"card-text\"><strong>Year: </strong>{book.year}</p>\n                                <p className=\"card-text\"><strong>ISBN: </strong>{book.isbns}</p>\n                                <p className=\"card-text\">\n                                    <span>Rating: {book.rating.average} </span>\n                                    <i className={rating_classes[0]+star_class} aria-hidden=\"true\"></i>\n                                    <i className={rating_classes[1]+star_class} aria-hidden=\"true\"></i>\n                                    <i className={rating_classes[2]+star_class} aria-hidden=\"true\"></i>\n                                    <i className={rating_classes[3]+star_class} aria-hidden=\"true\"></i>\n                                    <i className={rating_classes[4]+star_class} aria-hidden=\"true\"></i>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n            )\n        }\n    }\n}\n\nexport default Details","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from './components/layout/Navbar';\nimport Index from './components/layout/Index';\nimport Details from './components/books/Details';\nimport { Provider } from './context'\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router basename={process.env.PUBLIC_URL}>\n        <React.Fragment>\n          <Navbar />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Index} />\n              <Route exact path=\"/details/book/:id\" component={Details} />\n            </Switch>\n          </div>\n        </React.Fragment>\n      </Router>\n    </Provider>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}